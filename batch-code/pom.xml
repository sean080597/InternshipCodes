
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.csc.gdn.integralpos</groupId>
	<artifactId>ge-ife-batch</artifactId>
	<version>4.0.0</version>
	<name>Batch integralpos</name>
	<description>Batch integralpos</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<domain-integration.version>4.0.0</domain-integration.version>
		<!-- MSG Version -->
		<msg-base.version>4.0.0</msg-base.version>
		<msg-common-annotation.version>4.0.0</msg-common-annotation.version>
		<msg-common-processor.version>4.0.0</msg-common-processor.version>
		<elasticsearch.version>6.8.6</elasticsearch.version>
		<!-- Jasper Library Version -->
		<groovy.version>3.0.0-alpha-4</groovy.version>
		<docker.registryHost>base-docker-registry:5000</docker.registryHost>
		<docker.projectName>aviva-afa</docker.projectName>
		<docker.dockerHost>http://20.203.133.130:4444</docker.dockerHost>
		<docker.directory>D:\Aviva
			GitHub\ife-continous-delivery\source-code\docker</docker.directory>
		<docker.currentTag>nhuttest-03102017-1000</docker.currentTag>
	</properties>
	
	<repositories>
     <!-- add the elasticsearch repo -->
      <repository>
         <id>elasticsearch-releases</id>
         <url>https://artifacts.elastic.co/maven</url>
         <releases>
          <enabled>true</enabled>
         </releases>
         <snapshots>
            <enabled>false</enabled>
         </snapshots>
      </repository>     
   	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Hoxton.SR7</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
		<dependency>
		    <groupId>com.ibm.mq</groupId>
		    <artifactId>mq-jms-spring-boot-starter</artifactId>
		    <version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.elasticsearch</groupId>
		    <artifactId>elasticsearch</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.elasticsearch.client</groupId>
		    <artifactId>elasticsearch-rest-high-level-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>
		<dependency>
			<groupId>com.csc.gdn.integralpos</groupId>
			<artifactId>msg-common-domain</artifactId>
			<version>${msg-base.version}</version>
		</dependency>
		<dependency>
			<groupId>com.csc.gdn.integralpos</groupId>
			<artifactId>domain-quotation</artifactId>
			<version>${msg-base.version}</version>
		</dependency>
		<dependency>
			<groupId>com.csc.gdn.integralpos</groupId>
			<artifactId>domain-dms</artifactId>
			<version>${msg-base.version}</version>
		</dependency>
		<dependency>
			<groupId>com.csc.gdn.integralpos</groupId>
			<artifactId>domain-payment</artifactId>
			<version>${msg-base.version}</version>
		</dependency>
		<dependency>
	    	<groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
		  <groupId>org.owasp</groupId>
		  <artifactId>security-logging-log4j</artifactId>
		  <version>LATEST</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>5.3.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
		<dependency>
		    <groupId>com.opencsv</groupId>
		    <artifactId>opencsv</artifactId>
		    <version>5.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<configuration>
					<imageName>${docker.registryHost}/${docker.projectName}/${project.artifactId}</imageName>
					<dockerDirectory>${docker.directory}\${project.artifactId}</dockerDirectory>
					<dockerHost>${docker.dockerHost}</dockerHost>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<imageTags>
						<imageTag>${docker.currentTag}</imageTag>
					</imageTags>
					<pushImage>true</pushImage>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>