version: '3.8'
services:
  backend:
    container_name: strapi_app
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: ${ENVIRONMENT}
    ports:
      - "${STRAPI_PORT}:1337"
    volumes:
      - ./backend:/app
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - mongodb
    networks:
      - strapi-app-network
  frontend:
    container_name: next_app
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: ${ENVIRONMENT}
    ports:
      - "${NEXT_PORT}:3000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - strapi-app-network
  mongodb:
    container_name: mongodb
    image: mongo:4.4
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - strapidata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - strapi-app-network
  # nginx:
  #   container_name: nginx
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - "${NGINX_PORT}:80"
  #   environment:
  #     - NGINX_ENV=${ENVIRONMENT}
  #   volumes:
  #     - ./backend:/var/www/html/backend
  #     - ./frontend:/var/www/html/frontend
  #     - ./nginx/nginx.conf.template:/etc/nginx/conf.d/default.conf.template
  #     - ./nginx/nginx.${ENVIRONMENT}.conf:/etc/nginx/conf.d/nginx.${ENVIRONMENT}.conf
  #     - ./nginx/logs:/var/log/nginx
  #   depends_on:
  #     - frontend
  #   networks:
  #     - strapi-app-network
networks:
  strapi-app-network:
    driver: bridge
volumes:
  strapidata:
