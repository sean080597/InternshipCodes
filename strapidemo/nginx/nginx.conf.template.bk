# "keys_zone=name:size” --> size: 10MB/0.125kB ~ 80000 cache keys
# levels --> two‑level directory hierarchy, max 3
# inactive --> removed items if not accessed after 7 days
# use_temp_path=off --> write files directly to the cache dir and avoid unnecessary copying of data to a temp storage first
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
# skip header Set-Cookie
proxy_ignore_headers Set-Cookie;
# redirect to upstream with header X-No-Cache
proxy_no_cache $http_x_no_cache;

# set zone 10MB, named conn_limit_per_ip & req_limit_per_ip
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;

# 64-bit systems => 16k & 32-bit systems => 8k
client_body_buffer_size  8k;
client_max_body_size 2m;
client_header_buffer_size 1m;
large_client_header_buffers 4 8k;

# upstream
upstream nextjs_upstream {
  server next_app:3000 max_fails=3 fail_timeout=60 weight=1;
}

upstream strapi_upstream {
  server strapi_app:1337 max_fails=3 fail_timeout=60 weight=1;
}

# Ini untuk frontend Nuxtjs (Static SPA)
server {
  # default port 80
  listen 80 default_server;
  listen [::]:80 default_server;
  # As this's default server and will handle all requests that aren't matched by other server blocks --> we don’t need a name
  server_name _;
  # The NGINX version doesn't appear in the response headers
  server_tokens off;
  # set root
  root /var/www/html/frontend;

  # set error_log critical only
  error_log /var/log/nginx/error.log crit;
  access_log /var/log/nginx/access.log;

  # limit req & conn
  limit_conn conn_limit_per_ip 10;
  limit_req zone=req_limit_per_ip burst=10 nodelay;

  # compressing files before sending, gzip works best on text-heavy file formats such as: css, js, svg, xml, etc.
  # text/html is always compressed
  gzip on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_comp_level 3;
  gzip_proxied expired no-cache no-store private auth;
  # disable compression for IE v1-6 cause does not support
  gzip_disable "MSIE [4-6] \.";
  gzip_types
  text/css text/javascript text/xml text/plain text/x-component
  application/javascript application/x-javascript application/json application/xml application/rss+xml application/atom+xml
  font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  # cache file descriptors (FD)
  open_file_cache max=2500 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 4;
  open_file_cache_errors on;

  # close the connection with the client that is no longer interactive
  reset_timedout_connection on;
  # default - 60, request timed out
  client_header_timeout 10;
  client_body_timeout 10;
  # default - 75, timeout for keep-alive connections
  keepalive_timeout 15;
  keepalive_requests 30;
  # default - 60, close the connection after this time if the client do nothing
  send_timeout 10;

  # copying the data into the buffer and enables direct copying data from one FD to another
  sendfile on;
  # send HTTP response headers in one packet right after the chunk of data has been obtained by "sendfile"
  tcp_nopush on;
  # bypass Naggle and send the data as soon as it's available
  tcp_nodelay on;

  # security headers
  include conf.d/nginx.${NGINX_ENV}.conf;

  location /_next/static {
    # use cache zone STATIC to cache any file whose path contains the /_next/static dir
    proxy_cache STATIC;
    # then pass all requests to nextjs_upstream
    proxy_pass http://nextjs_upstream;

    # JUST FOR TESTING - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /_next/image {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # JUST FOR TESTING - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    # proxy pass to the above upstream
    proxy_pass http://nextjs_upstream;
  }

  # # Untuk Backend Laravel
  # location ~ /auth {
  #   try_files $uri $uri/ /index.php?$query_string;
  # }

  # location ~ /api {
  #   try_files $uri $uri/ /index.php?$query_string;
  # }

  # location ~ /graphql* {
  #   try_files $uri $uri/ /index.php?$query_string;
  # }

  location ~ /strapi {
    root /var/www/html/backend;
    rewrite ^/strapi/?(.*)$ /$1 break;
    proxy_pass http://strapi_upstream;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass_request_headers on;
  }

  location ~ /\.ht {
    deny all;
  }
}
